package com.mwi7.myapplication

import android.Manifest
import android.app.Activity
import android.content.Intent
import android.content.pm.PackageManager
import android.net.Uri
import android.os.Bundle
import android.provider.Telephony
import android.telephony.SmsManager
import android.util.Patterns
import android.view.View
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity(), View.OnClickListener {

    lateinit var number: String
    lateinit var message : String
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)


        btn1.setOnClickListener(this)
        btn2.setOnClickListener(this)
    }

    override fun onClick(v: View?) {
        number = etnumber.text.toString().trim()
        message= etmessage.text.toString().trim()

        if (number.isEmpty()){
            etnumber.setError("Number required")
            etnumber.requestFocus()
        }else if (!Patterns.PHONE.matcher(number).matches()){
            etnumber.setError("Invalide Number")
            etnumber.requestFocus()
        }

        if (message.isEmpty()){
            etmessage.setError("Message required")
            etmessage.requestFocus()
        } else if (v==btn1){
            
            //first intent open system sms software than send msg
            val intent = Intent(Intent.ACTION_VIEW)
            intent.setData(Uri.parse("smsto:$number"))
            intent.putExtra("sms_body",message)
            startActivity(intent)
        }else if (v==btn2){
            //send sms directly
            if (ContextCompat.checkSelfPermission(this,Manifest.permission.SEND_SMS)==PackageManager.PERMISSION_GRANTED){
                sendMessage()
            }else{
                ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.SEND_SMS),101)
            }

        }
    }

    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)
        if (grantResults.size>0){
            if (requestCode==101 && grantResults[0] ==PackageManager.PERMISSION_GRANTED){
               sendMessage()
            }else{
                Toast.makeText(this,"sms send permission required",Toast.LENGTH_SHORT).show()
            }
        }
    }

    private fun sendMessage() {
        val sm = SmsManager.getDefault()
        sm.sendTextMessage(number,null,message,null,null)
        Toast.makeText(this,"Message Sent",Toast.LENGTH_SHORT).show()
    }
}













