package com.example.idrisi

import android.Manifest
import android.content.ContentValues
import android.content.Intent
import android.content.pm.PackageManager
import android.graphics.Bitmap
import android.net.Uri
import android.os.Bundle
import android.provider.MediaStore
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import androidx.core.app.ActivityCompat
import androidx.core.content.ContextCompat
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity() {

    val cameraPermission: String = Manifest.permission.CAMERA

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        btnCapture.setOnClickListener {
            //if system os is >= marshmallow , request runtime permission
            if (ContextCompat.checkSelfPermission(this,cameraPermission)== PackageManager.PERMISSION_GRANTED) {
                //permission already granted
                openVideoCamera()
            } else {
                //permission not enabled , request it
                ActivityCompat.requestPermissions(this, arrayOf(cameraPermission),101)
            }
        }
    }

    //handling permission result
    override fun onRequestPermissionsResult(requestCode: Int, permissions: Array<out String>, grantResults: IntArray) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)

        if (grantResults.size >0){
            if (grantResults[0] == PackageManager.PERMISSION_GRANTED)
                openVideoCamera()
            else
                Toast.makeText(this,"Camera Permission Required",Toast.LENGTH_SHORT).show()
        }
    }

    //function permission result
    private fun openVideoCamera() {
        //Camera Intent
        val cameraIntent : Intent = Intent(MediaStore.ACTION_VIDEO_CAPTURE)
        startActivityForResult(cameraIntent,102)
    }

    override fun onActivityResult(requestCode: Int, resultCode: Int, data: Intent?) {
        super.onActivityResult(requestCode, resultCode, data)
        //called when video was captured from camera
           if (requestCode == 102 && resultCode == RESULT_OK && data!=null){
               val uri : Uri? = data.data
               videoView.setVideoURI(uri)
               videoView.start()
           }
    }
}








