package com.mwi7.newsbook.Common

import android.content.Intent
import androidx.appcompat.app.AppCompatActivity
import android.os.Bundle
import android.text.Html
import android.view.View
import android.view.WindowManager
import android.view.animation.Animation
import android.view.animation.AnimationUtils
import android.widget.Button
import android.widget.LinearLayout
import android.widget.TextView
import androidx.viewpager.widget.ViewPager
import com.mwi7.newsbook.HelperClasses.SliderAdapter
import com.mwi7.newsbook.R
import com.mwi7.newsbook.User.UserDashboard
import kotlin.properties.Delegates

class OnBoarding : AppCompatActivity(), ViewPager.OnPageChangeListener {

    lateinit var viewPager : ViewPager
    lateinit var dotsLayout: LinearLayout
    lateinit var sliderAdapter: SliderAdapter
    var dots = arrayOf<TextView>()
    lateinit var letsGetStartedBtn : Button
    lateinit var animation : Animation
    var currentPosition : Int = 0

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        window.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN)
        setContentView(R.layout.activity_on_boarding)


        //Hooks
        viewPager = findViewById(R.id.viewPager)
        dotsLayout = findViewById(R.id.dots)
        letsGetStartedBtn = findViewById(R.id.getStartedBtn)

        //call adapter
        sliderAdapter = SliderAdapter(this)
        viewPager.adapter=sliderAdapter

        //Dots
        viewPager.addOnPageChangeListener(this)
        addDots(0)
    }


    public fun skip(view : View){
        startActivity(Intent(this,UserDashboard::class.java))
        finish()
    }

    public fun next(view: View){
        viewPager.setCurrentItem(currentPosition+1)
    }

    public fun onClickLetsGetStartedBtn(view: View){
        startActivity(Intent(this,UserDashboard::class.java))
        finish()
    }

    private  fun addDots(position: Int){
        dots = arrayOf(TextView(this), TextView(this), TextView(this), TextView(this))
        dotsLayout.removeAllViews()
        for (i in dots.indices){
            dots[i]=TextView(this)
            dots[i].text = Html.fromHtml("&#8226")
            dots[i].textSize = 35F
            dotsLayout.addView(dots[i])
        }
        if (dots.isNotEmpty()){
            dots[position].setTextColor(resources.getColor(R.color.purple_700))
        }
    }

    override fun onPageScrolled(position: Int, positionOffset: Float, positionOffsetPixels: Int) {

    }

    override fun onPageSelected(position: Int) {
        currentPosition=position
        addDots(position)
        if (position==0){
            letsGetStartedBtn.visibility= View.INVISIBLE
        }else if (position==1){
            letsGetStartedBtn.visibility= View.INVISIBLE
        }else if(position==2){
            letsGetStartedBtn.visibility= View.INVISIBLE
        }else{
            animation = AnimationUtils.loadAnimation(this,R.anim.bottom_anim)
            letsGetStartedBtn.animation=animation
            letsGetStartedBtn.visibility= View.VISIBLE
        }

    }

    override fun onPageScrollStateChanged(state: Int) {

    }


}












