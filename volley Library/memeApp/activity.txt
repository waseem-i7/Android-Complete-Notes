package com.mwi7.appmemeshare

import android.content.Intent
import android.graphics.drawable.Drawable
import android.os.Bundle
import android.view.View
import android.widget.Button
import android.widget.ImageView
import android.widget.ProgressBar
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.android.volley.Request
import com.android.volley.toolbox.JsonObjectRequest
import com.android.volley.toolbox.Volley
import com.bumptech.glide.Glide
import com.bumptech.glide.load.DataSource
import com.bumptech.glide.load.engine.GlideException
import com.bumptech.glide.request.RequestListener
import com.bumptech.glide.request.target.Target
import kotlinx.android.synthetic.main.activity_main.*

class MainActivity : AppCompatActivity() {

    private var currentUrl : String?=null
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        fecth()

        button.setOnClickListener {

            val intent = Intent(Intent.ACTION_SEND)
            intent.putExtra(Intent.EXTRA_TEXT,"Hey Checked this cool meme $currentUrl")
            intent.type="text/plain"
            startActivity(Intent.createChooser(intent,"Share this using"))
        }

        button2.setOnClickListener {
              fecth()
        }
    }

    private fun fecth(){
        progressBar.visibility =View.VISIBLE
        //Instantiate the RequestQueue.

        val url = "https://meme-api.herokuapp.com/gimme"

        //Request a string response from the provided URl
        val jsonObjectRequest =JsonObjectRequest(Request.Method.GET,url,null,
            {
                 currentUrl =it.getString("url")

                Glide.with(this).load(currentUrl).listener(object : RequestListener<Drawable>{
                    override fun onLoadFailed(
                        e: GlideException?,
                        model: Any?,
                        target: Target<Drawable>?,
                        isFirstResource: Boolean
                    ): Boolean {
                        progressBar.visibility=View.GONE
                        return false
                    }

                    override fun onResourceReady(
                        resource: Drawable?,
                        model: Any?,
                        target: Target<Drawable>?,
                        dataSource: DataSource?,
                        isFirstResource: Boolean
                    ): Boolean {
                        progressBar.visibility=View.GONE
                        return false
                    }
                }).into(imageView)
            },
            {
                   Toast.makeText(this,"Somthing went wrong",Toast.LENGTH_SHORT).show()
                })

        //Add the request to the requestqueue
        MySingleton.getInstance(this).addToRequestQueue(jsonObjectRequest)
    }
}